主要文件有 

主体：
 master.py        ---->    程序主体      (如果要使用本程序，请直接运行master.py)

 简单完成作业.py   ---->       作业任务，简单程序  (单体程序，没有调用其他模块，直接运行即可)
模块：
 manual.py        ---->    手动模块
 auto.py          ---->    自动模块
 add_group.py     ---->    自动添加IP模块
 



大体功能有 ： 1,手动执行每一步   2，自动执行 AB组流程控制   3 ，自动添加组内IP成员


1.手动执行每一步
核心内容就是 替换字符串，先while循环 ，将每行输出到变量里，if判断哪行符合添加，符合条件的line = line.replace('server','#server')    即为将其对应的组下线，如果要上线即为相反line = line.replace('#server','server')

2.自动执行
思路如下：

主体流程控制

 AB组 自动迭代 操作 -->  

先将A组切下去，然后保证B组是在线的。然后重启服务-->更新代码-->再把A组上线-->再重启服务-----> 

     迭代----->

         -->把B组切下去，保证A组是在线的。重启服务-->更新代码-->再把A组上线-->再重启服务---> 完成

3 ，自动添加组内IP成员
先把文件读出的行 看成一个整体，因为open没办法指定插入，所以我这把这个整体切开来，然后分成3部分，first。lines，end。分别吧读取到的内容存入变量，最后全部一次连接为一个总的变量 ，最后写入即可。

核心内容为 将open的对象先读出来，读取行 赋予变量，截取到指定位置跳出，判断一下节点行，将是这个节点的行保存到一个变量里，将需要的行保存到 first变量里，再判断有多少个IP， 自动加一个IP（字符串相连接），取指定节点的行，用索引的方式，从这个点 一直读到结尾，用for写入变量暂存，最后写入整体到文件里就OK了





----------------------------------------------------------------------------------

#########python基础第二周作业需求
模拟生产环境 AB组 切换流量上线 ，基于nginx 反向代理
配置文件 在目录中,请讲执行文件放在 bin目录下

##需求:
1:通过 python交互 执行 启动程序 (input方式)
2:通过函数处理每一步操作
3:流程
    3.1 先进行问询， 提供几个选择，然后根据选择 执行相对的代码,比如
        现在要做的是:()
            A.将A组切上去
            B.将A组切下来
            C.将B组切上去
            D.将B组切下来
            E.重启Nginx服务
            F.完成迭代
            G.更新代码 (可以写成伪代码 print('代码已更新完成'))

    3.1 先进行 A组   或者  B组的 上线，
        每组上线 都需要 先 将那个组对应的主机 从nginx配置中切下来 （也就是把权重调整为0,或者注释掉）
        然后重启Nginx服务
        然后更新代码
        然后将那个组  对应的主机 从 nginx配置文件中 切上来
        然后重启Nginx服务

        另外一个组重复上面这个操作
        然后完成更新迭代

4.修改 readme文件， 将你自己的逻辑写在这个文件下面
#############################################





